üíª Preparando o ambiente de trabalho:

#01. Criar o diret√≥rio do projeto (exemplo investidor-django):
    cd D:\Dev\Projetos_Python\cepedi
    md investidor-django
    cd investidor-django

#02. Criar um ambiente virtual:
    python -m venv venv

#03. Ativar o ambiente virtual:
    .\venv\Scripts\activate

#04. Instalar Django:
    pip install django

#05. Instalar Django REST Framework:
    pip install djangorestframework

    observa√ß√£o opcional: Para usar o Swagger no seu projeto Django, voc√™ pode seguir os seguintes passos para integrar a documenta√ß√£o interativa da API. O Swagger √© geralmente integrado atrav√©s de uma ferramenta chamada drf-yasg, que √© um gerador de documenta√ß√£o para APIs constru√≠das com Django REST Framework.
    pip install drf-yasg

#06. Criar um novo projeto Django:
    django-admin startproject restful01

#07. Entrar no diret√≥rio do projeto e abrir o arquivo settings.py:
    cd .\restful01\   

#08 O comando python manage.py startapp myapp cria um novo aplicativo Django chamado ‚Äúmyapp‚Äù dentro do seu projeto.  
    python manage.py startapp myapp

#08 Agora altere o Arquivo "settings.py" conforme orienta√ß√£o abaixo 
---------------------------------------------------------------------------------------------
    ## Adicionando o nome do novo aplicativo (myapp):
    INSTALLED_APPS = [
        'django.contrib.admin',
        'django.contrib.auth',
        'django.contrib.contenttypes',
        'django.contrib.sessions',
        'django.contrib.messages',
        'django.contrib.staticfiles',
        # Habilita Django REST Framework
        "rest_framework",
        # Habilita MyApp application
        'myapp',
    ]

    ## Setando o layout para portugu√™s
    LANGUAGE_CODE = 'pt-br'
    TIME_ZONE = 'America/Sao_Paulo'
    USE_I18N = True
    USE_L10N = True  # Habilita a localiza√ß√£o
    USE_TZ = True
---------------------------------------------------------------------------------------------

#08. Fazer migra√ß√µes iniciais para o banco de dados:
    python manage.py makemigrations

#09. Aplicar as migra√ß√µes ao banco de dados:
    python manage.py migrate

#10. Criar um superusu√°rio para acessar a √°rea administrativa:
     python manage.py createsuperuser

#09. Iniciar o servidor de desenvolvimento:
     python manage.py runserver



Observa√ß√£o para cria√ß√£o ou atualiza√ß√£o das tabelas no banco usando migra√ß√£o:
python manage.py makemigrations myapp
python manage.py migrate 
python manage.py showmigrations

##########################################################################################
## Entendendo a estrutura do projeto
Arquivo "settings.py":
    - Descri√ß√£o:
        Cont√©m todas as configura√ß√µes do projeto, incluindo:
            Apps do projeto: Lista de aplicativos instalados.
            Middlewares: Camadas de processamento que acontecem antes ou depois da view.
            Databases: Configura√ß√µes do banco de dados.
            URLs: Configura√ß√µes de roteamento para os aplicativos.

    ‚úÖ cont√©m todas as configura√ß√µes do projeto
-- nosso apps.
-- middlewares.
-- databases.
‚úÖ cont√©m as URLs para nossos apps.
-------------------------------------------------------------------------------------------
Vamos usar essa estrutura:

restful01/
    manage.py
    restful01/
        __init__.py
        settings.py
        urls.py
        wsgi.py
    myapp/
        __init__.py
        admin.py
        apps.py
        models/
            __init__.py
            usuario.py
            ativo.py
            carteira.py
        views/
            __init__.py
            usuario.py
            ativo.py
            carteira.py
        forms/
            __init__.py
            usuario.py
            ativo.py
            carteira.py
        urls/
            __init__.py
            usuario.py
            ativo.py
            carteira.py
        templates/
            ativo/
                ativo_list.html
                ativo_form.html
                ativo_confirm_delete.html
            usuario/
                usuario_list.html
            carteira/
                carteira_list.html
        migrations/
        tests.py





